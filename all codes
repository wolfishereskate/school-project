def isempty(stk):
    if stk==[] :
        return True
    else:
        return False
def Push(stk,elt):
    stk.append(elt)
    print(stk)
    print('eelement inserted successfully')
def Pop(stk):
    if isempty(stk):
        print('underflow')
    else: print(stk.pop())
def Seek(stk):
    if isempty(stk):
        print('underflow')
    else: 
        print('top element',stk[-1])
def Display(stk):
    a=stk[::-1]    
    print(a)
stack=[]
while True:
    print('........available stack oprations.......')
    print('          1.push')
    print("          2.pop")
    print('          3.seek')
    print('          4.display')
    print('          5.end')
    x=int(input('enter operation number '))    
    if x==1:
        element=input('entter eelement u want to add ')
        Push(stack,element)
    if x==2:
        Pop(stack)
    if x==3:
        Seek(stack)
    if x==4:
        Display(stack)     
    elif x==5:
        break
    


    CSV CODE

import csv
f=open("PHONE.csv","w",newline="")
a=csv.writer(f)
a.writerow(["Name","Address","AreaCode","PhoneNo."])
a.writerow(["Sirius","12,Grimauld Place","020",9121822518])
a.writerow(["Remus","4,Privet Drive","020",8063171981])
a.writerow(["Lily","13,Kingcross","020",7273993773])
a.writerow(["James","7,Godric hollow","020",7870908897])
f.close()
f=open("PHONE.csv","r",newline="")
l=[]
l2=[]
r=csv.reader(f)
for i in r:
    l.append(i)
d=sorted(l)
for i in d:
    print(i)
f.close()


Binarry Codee
import pickle
def create_file():
      '''Creating/writing the binary file with the required information'''
        dict1={"WORD":"ACCIDAL","MEANING":"dial someone's number on phone accidentally"}
        dict2={"WORD":"CATASTROPHIZE","MEANING":"present a situation as worse than it is"}
       dict3={"WORD":"CONLANG","MEANING":"an invented language intended for human communication"}
        pickle.dump(dict5,file)
        pickle.dump(dict6,file)
        pickle.dump(dict7,file)
        file.close()

def read_file1():
        '''Read the file and print the records with the specified conditions of PART (1) '''
        dict={}
        file=open('DICTIONARY.dat','rb')
        word=input("Enter the word whose meaning is to be searched for <<<(USE  UPPERCASE)>>> : ")
        found=False
        try:
            while True:
                dict=pickle.load(file)
                if dict['WORD']==word:
                    print(dict)
                    found=True
        except EOFError:
            if found == False:
                print ("Record not present")
            file.close()

def read_file2():
      '''Read the file and print the records with the specified conditions of PART (2) '''
        file = open('DICTIONARY.dat', 'a+b')
        new_word=input("Enter the new word to be added <<<(USE     UPPERCASE)>>> : ")
        new_meaning=input("Enter the meaning of this new word :  ")
        new_dict={}
        new_dict.update({"WORD":new_word,"MEANING":new_meaning})
        pickle.dump(new_dict,file)
        print("Added successfully")
        file.close()

def read_file3():
    '''Read the file and delete the record with the specified conditions of PART (3) '''
    file= open('DICTIONARY.dat', 'r+b')
    del_word = input("Enter the word to be deleted <<<(USE UPPERCASE)>>> : ")
    found=False
    list=[]
    try:
        while True:
            dict = pickle.load(file)
            list.append(dict)
    except EOFError:
        file.close()

    file_new=open("DICTIONARY.dat","wb")
    for record in list:
        if record["WORD"]==del_word:
            found=True
        else:
            pickle.dump(record,file_new)
    if found == False:
        print("Record not present")
    else:
        print("Deleted successfully")
    file_new.close()

def read_file4():
  '''Read the file and print the records with the specified conditions of PART (4) '''
    file = open('DICTIONARY.dat', 'r+b')
    modify_word = input("Enter the word to be modified (USE UPPERCASE) : ")
    modification=input("Enter the modification to be made in its meaning")
    found=False
    list=[]
    try:
        while True:
            dict = pickle.load(file)
            list.append(dict)
    except EOFError:
        file.close()

    file_new=open("DICTIONARY.dat","wb")
    for record in list:
        if record["WORD"]==modify_word:
            record["MEANING"]=modification
            pickle.dump(record,file_new)
            found=True
        else:
            pickle.dump(record,file_new)
    if found == False:
        print("Word not present in dictionary. Please check your entered word and try again.")
    else:
        print("Modified successfully")
    file_new.close()
  


  TEXTT FILE
  f1=open("poem.txt","r")
f2=open("eret.txt","w")
l1=f1.read()
t=l1.split()
for j in t:
     if j=="the":
       f2.write('that')
       f2.write(' ')
     else:
       f2.write(j)
       f2.write(' ')
    f2.write('\n')
f2.close()
f1.close()
f2=open("eret.txt","r")
l2=f2.readlines()
print(l2)
f2.close()
